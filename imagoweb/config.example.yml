# ================
# General settings
# ================
default_locale: en-US # available locales are listed in /locales; Dutch locale is incomplete

metadata:
    title: A ShareX file server
    description: Imago is an efficient, highly-configurable ShareX upload server complete with its own dashboard and Administrator panel. With it, you can upload any file you like, be it an image, video, audio file or just plain text!
    site_name: Imago CDN
    theme_colour: 4196f7
    
    url: https://imagocdn.com
    image: meta/image.jpg
    thumbnail: meta/thumbnail.jpg

server:
    host: "0.0.0.0"
    port: 5000

file_archive:
    enabled: true

file_optimisation:
    compress: yes
    quality: 85

    admin_bypass:
        can_bypass: yes
        by_default: no

url_shortening:
    custom_url:
        admin_only: yes

allowed_extensions:
    png: image
    jpg: image
    ico: image

    mov: video
    mp4: video
    gif: gif

    wav: audio
    mp3: audio

    txt: other

max_file_size: 
    megabytes: 2
    kilobytes: 0

logging:
    level: INFO

generator:
    files: 8
    urls: 3
    token: 56

figlet: 
    boot: MSGs Imago
    exit: Goodbye
    font: standard

version:
    major: 3
    minor: 8
    patch: 9
    release: stable

sys_messaging:
    before: Hey {recipient.display_name}, <br><br>
    after: <br><br>Sincerely, <br>Project Imago

    events:
        FORCE_USER_CREATE: We would like to wish you a warm welcome to Project Imago - the only ShareX server you'll ever need! With this dashboard, you are able to look at - and delete - any files or shortened URLs uploaded by you. You are also able to edit your account credentials and reset your account's API token if necessary.

        FORCE_USER_TOKEN_RESET: This is a notification to let you know that your account's API token has been reset by a Site Administrator. If you believe this was a mistake, please contact one of the Site Administrators.
        USER_TOKEN_RESET: This is a notification to let you know that your account's API token has been reset. If you did not perform this action, please change your password immediately, otherwise, you can safely ignore this message.

        ADMIN_TOGGLE_OFF: This is a notification to let you know that your account has been removed from the list of Site Administrators. This means that you are no longer able to access the Administrator dashboard or perform Administrator actions.
        ADMIN_TOGGLE_ON: This is a notification to let you know that your account has been added to the list of Site Administrators. You can now access the Administrator dashboard - by clicking the lock icon at the top-right of the screen - and perform Administrator actions like managing files, URLs and users.

        FILE_RESTORE: This is a notification to let you know that a file owned by you (<a href="{url}">{url}</a>) - that was previously deleted - has been restored and can now be accessed as usual.

        FORCE_FILE_DELETE: This is a notification to let you know that a file owned by you (<a href="{url}">{url}</a>) has been deleted by a Site Administrator and will be removed from the system at midnight. If you believe this was a mistake, please contact a Site Administrator before midnight and ask them to restore the file.
        FORCE_URL_DELETE: This is a notification to let you know that a URL you have shortened (<a href="/u/{url}">{url}</a>) has been deleted by a Site Administrator and can no longer be accessed.

        FORCE_USER_EDIT: This is a notification to let you know that a Site Administrator has forcibly edited your account. If you wish to know what was changed and why, or believe this was a mistake, please contact a Site Administrator.

# ================
# Superuser config
# ================
superuser:
    username: superuser
    password: youshallnotpass

    display_name: Administrator
    api_token: Master youshallnotpass 

# =================
# External services
# =================
discord:
    enabled: true
    FILE_DELETE: |-
            ```md
            [DELETE] Image
            ==============

            < SIZE   = {file[size]}KB
            < TYPE   = {file[type]}/{file[ext]}
            < KEY    = {file[key]}
            
            < AUTHOR = User #{file[author][id]} ({file[author][name]})
            < ACTOR  = User #{actor[id]} ({actor[name]})```
            {file[url]}

        FILE_UPLOAD: |-
            ```md
            [UPLOAD] Image
            ==============

            < SIZE   = {file[size]}KB
            < TYPE   = {file[type]}
            < KEY    = {file[key]}
            
            < ACTOR  = User #{actor[id]} ({actor[name]})```
            {file[url]}

        URL_SHORTEN: |-
            ```md
            [SHORTEN] URL
            =============

            < URL    = {url[link]}
            < KEY    = {url[key]}
            
            < ACTOR  = User #{actor[id]} ({actor[name]})```
            {url[url]}

        URL_DELETE: |-
            ```md
            [DELETE] URL
            ============

            < URL    = {url[link]}
            < KEY    = {url[key]}
            
            < AUTHOR = User #{url[author][id]} ({url[author][name]})
            < ACTOR  = User #{actor[id]} ({actor[name]})```

        USER_EDIT: |-
            ```md
            [EDIT] User
            ===========

            < USERNAME       = {before[name]} > {after[name]}
            < PASSWORD       = {before[password]} > {after[password]}
            < DISPLAY NAME   = {before[display]} > {after[display]}

            < ACTOR          = User #{after[id]} ({after[name]})```

        USER_TOKEN_RESET: |-
            ```md
            [RESET] Token
            =============

            < USER   = User #{user[id]} ({user[name]})
            < ACTOR  = User #{user[id]} ({user[name]})```

        FORCE_USER_CREATE: |-
            ```md
            [CREATE] User
            =============

            < USERNAME      = {user[name]}
            < PASSWORD      = (redacted)
            < DISPLAY NAME  = {user[display]}
            < ADMINISTRATOR = {'Yes' if user[admin] else 'No'}

            < ACTOR         = User #{actor[id]} ({actor[name]})```

        FORCE_USER_EDIT: |-
            ```md
            [EDIT] User
            ===========

            < USERNAME       = {before[name]} > {after[name]}
            < PASSWORD       = {before[password]} > {after[password]}
            < DISPLAY NAME   = {before[display]} > {after[display]}

            < ACTOR          = User #{actor[id]} ({actor[name]})```

        FORCE_USER_DELETE: |-
            ```md
            [DELETE] User
            =============

            < USER   = User #{user[id]} ({user[name]}) 
            < JOINED = {user[created]}

            < ACTOR  = User #{actor[id]} ({actor[name]})```

        FORCE_USER_TOKEN_RESET: |-
            ```md
            [RESET] Token
            =============

            < USER  = User #{user[id]} ({user[name]}) 
            < ACTOR = User #{actor[id]} ({actor[name]})```

        FORCE_FILE_DELETE: |-
            ```md
            [DELETE] Image
            ==============

            < SIZE   = {file[size]}KB
            < TYPE   = {file[type]}
            < KEY    = {file[key]}
            
            < AUTHOR = User #{file[author][id]} ({file[author][name]})
            < ACTOR  = User #{actor[id]} ({actor[name]})```
            {file[url]}

        FORCE_URL_DELETE: |-
            ```md
            [DELETE] URL
            ============

            < URL    = {url[link]}
            < KEY    = {url[key]}
            
            < AUTHOR = User #{url[author][id]} ({url[author][name]})
            < ACTOR  = User #{actor[id]} ({actor[name]})```

        ADMIN_TOGGLE_ON: |-
            ```md
            [TOGGLE] Administrator
            ======================
            
            < TOOGLED = On
            
            < USER    = User #{after[id]} ({after[name]})
            < ACTOR   = User #{actor[id]} ({actor[name]})```

        ADMIN_TOGGLE_OFF: |-
            ```md
            [TOGGLE] Administrator
            ======================
            
            < TOOGLED = Off
            
            < USER    = User #{after[id]} ({after[name]})
            < ACTOR   = User #{actor[id]} ({actor[name]})```

    # you may list as many as you like    
    webhooks:
        - url: https://discordapp.com/api/webhooks/channel/token
          username: Imago Dashboard

          events:
            - FILE_DELETE # file deleted by its owner
            - FILE_UPLOAD # file uploaded
            - FILE_RESTORE # file restored

            - URL_SHORTEN # url shortened
            - URL_DELETE # shortened url deleted

            - USER_EDIT # user has edited their account
            - USER_TOKEN_RESET # user has reset their token

        - url: https://discordapp.com/api/webhooks/channel/token
          username: Imago Admin Dashboard
          events:
            - FORCE_USER_CREATE # admin created a user
            - FORCE_USER_EDIT # admin edited a user by force
            - FORCE_USER_DELETE # admin deleted a user by force
            - FORCE_USER_TOKEN_RESET # admin reset a user's token by force
            - FORCE_FILE_DELETE # admin deleted an image by force
            - FORCE_URL_DELETE # admin deleted a shortened url
            - ADMIN_TOGGLE_ON # superuser made a user admin
            - ADMIN_TOGGLE_OFF # superuser removed admin from a user

postgres:
    user: user
    password: youshallnotpass

    port: 5432
    host: 127.0.0.1

    database: imago

honeybadger:
    enabled: true
    key: <key>